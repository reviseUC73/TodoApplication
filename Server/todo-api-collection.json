{
	"info": {
		"_postman_id": "6b5e2d8e-1234-5678-9abc-def012345678",
		"name": "Todo App API",
		"description": "Collection for testing the Todo App API endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"testuser\",\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"register"
							]
						},
						"description": "Create a new user account"
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.globals.set(\"access_token\", jsonData.access_token);",
									"pm.globals.set(\"refresh_token\", jsonData.refresh_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"testuser\",\n  \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Login with existing credentials"
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.globals.set(\"access_token\", jsonData.access_token);",
									"pm.globals.set(\"refresh_token\", jsonData.refresh_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"refresh_token\": \"{{refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/refresh",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"refresh"
							]
						},
						"description": "Refresh the access token using a refresh token"
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/auth/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"logout"
							]
						},
						"description": "Logout the current user"
					},
					"response": []
				}
			],
			"description": "Authentication-related API endpoints"
		},
		{
			"name": "Todos",
			"item": [
				{
					"name": "Get All Todos",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/todos",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos"
							],
							"query": [
								{
									"key": "category",
									"value": "Work",
									"disabled": true
								},
								{
									"key": "completed",
									"value": "false",
									"disabled": true
								},
								{
									"key": "due_date",
									"value": "2024-04-21T18:00:00Z",
									"disabled": true
								}
							]
						},
						"description": "Retrieve all todos for the authenticated user with optional filters"
					},
					"response": []
				},
				{
					"name": "Create Todo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.globals.set(\"todo_id\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Complete API testing\",\n  \"description\": \"Test all endpoints of the Todo API\",\n  \"category\": \"Work\",\n  \"due_date\": \"2024-04-25T15:30:00Z\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/todos",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos"
							]
						},
						"description": "Create a new todo item"
					},
					"response": []
				},
				{
					"name": "Get Todo",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/todos/{{todo_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos",
								"{{todo_id}}"
							]
						},
						"description": "Get a specific todo by ID"
					},
					"response": []
				},
				{
					"name": "Update Todo",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Complete API testing\",\n  \"description\": \"Test all endpoints of the Todo API and document them\",\n  \"category\": \"Work\",\n  \"due_date\": \"2024-04-25T17:30:00Z\",\n  \"is_completed\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/todos/{{todo_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos",
								"{{todo_id}}"
							]
						},
						"description": "Update an existing todo"
					},
					"response": []
				},
				{
					"name": "Delete Todo",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/todos/{{todo_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos",
								"{{todo_id}}"
							]
						},
						"description": "Delete a todo by ID"
					},
					"response": []
				},
				{
					"name": "Get Filtered Todos - By Category",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/todos?category=Work",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos"
							],
							"query": [
								{
									"key": "category",
									"value": "Work"
								}
							]
						},
						"description": "Get todos filtered by category"
					},
					"response": []
				},
				{
					"name": "Get Filtered Todos - By Completion",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/todos?completed=false",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"todos"
							],
							"query": [
								{
									"key": "completed",
									"value": "false"
								}
							]
						},
						"description": "Get todos filtered by completion status"
					},
					"response": []
				}
			],
			"description": "Todo management API endpoints"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:5001",
			"type": "string"
		}
	]
} 